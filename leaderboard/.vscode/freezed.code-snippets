{
	"Part statement": {
		"prefix": "partGen",
		"body": [
			"part '${TM_FILENAME_BASE}.g.dart';",
		],
		"description": "Creates a filled-in part statement"
	},
	"Part 'Freezed' statement": {
		"prefix": "partFreezed",
		"body": [
			"part '${TM_FILENAME_BASE}.freezed.dart';",
		],
		"description": "Creates a filled-in freezed part statement"
	},
	"Freezed Data Class": {
		"prefix": "freezed",
		"body": [
			"@freezed",
			"class ${1:DataClass} with _$${1:DataClass} {",
			"  const factory ${1:DataClass}({",
			"    ${2}",
			"  }) = _${1:DataClass};",
			"}"
		],
		"description": "Freezed Data Class"
	},
	"Freezed Data Class with fromJson": {
		"prefix": "freezedJson",
		"body": [
			"@freezed",
			"class ${1:DataClass} with _$${1:DataClass} {",
			"  const factory ${1:DataClass}({",
			"    ${2}",
			"  }) = _${1:DataClass};",
			"",
			"  factory ${1}.fromJson(JsonObject json) => _$${1}FromJson(json);",
			"}"
		],
		"description": "Freezed Data Class"
	},
	"New Freezed Data Class File": {
		"prefix": "newFreezed",
		"body": [
			"import 'package:freezed_annotation/freezed_annotation.dart';",
			"",
			"part '$TM_FILENAME_BASE.freezed.dart';",
			"",
			"@freezed",
			"class ${1:DataClass} with _$${1:DataClass} {",
			"  const factory ${1:DataClass}({",
			"    ${2}",
			"  }) = _${1:DataClass};",
			"}"
		],
		"description": "Freezed Data Class"
	},
	"New Freezed Data Class File with fromJson": {
		"prefix": "newFreezedJson",
		"body": [
			"import 'package:freezed_annotation/freezed_annotation.dart';",
			"",
			"",
			"part '$TM_FILENAME_BASE.freezed.dart';",
			"part '$TM_FILENAME_BASE.g.dart';",
			"",
			"@freezed",
			"class ${1:DataClass} with _$${1:DataClass} {",
			"  const factory ${1:DataClass}({",
			"    ${2}",
			"  }) = _${1:DataClass};",
			"",
			"  factory ${1}.fromJson(JsonObject json) => _$${1}FromJson(json);",
			"}"
		],
		"description": "Freezed Data Class"
	},
	"Freezed Union": {
		"prefix": "freezedUnion",
		"body": [
			"@freezed",
			"class ${1:Union} with _$${1:Union} {",
			"  const factory ${1:Union}.${2}(${4}) = ${3};",
			"}"
		],
		"description": "Freezed Union"
	},
	"Freezed Union Case": {
		"prefix": "freezedUnionCase",
		"body": [
			"const factory ${1:Union}.${2}(${4}) = ${3};"
		],
		"description": "Freezed Union Case"
	},
	"From JSON": {
		"prefix": "fromJson",
		"body": [
			"factory ${1}.fromJson(JsonObject json) => _$${1}FromJson(json);"
		],
		"description": "From JSON"
	},
}